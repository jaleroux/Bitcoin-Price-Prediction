{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Here is an overview of my solution to the Glassnode Crypto Challenge.\
\
The solution contains a script file that executes the stages in data preparation, some feature engineering and finally model head to head and exploration and saving, Additionally, there is the application/deployement python code and docker container that has the live prediction prototype.\
\
I have opted to only look at the 1-hour prediction model. This is only because of time constraints, but I provide an outline of how I would approach it in further work. I have also left-out some hyper-parameter optimisation and kept cross validation to a minimum, again because of time constraints. \
\
\
Files\
Script.py - to be executed line-by-line\
Functions.py - data, feature, model build functions.\
api.py - python api set up \
\
(1)\
Time-Series - Stationarity\
Feature transform & design (how many lags)\
Lags - the historical information process. \
Scaling - to combat against high-magnitude/high-range features contributing disproportionately to the \
\
F1 persistence = \
\
F1 Logistic regression =\
\
final model. It will also ensure that the features are in scale of the activation functions.\
Epochs - how many times you fully pass through the observations.\
batch_size - online learning. One step forecasting.\
Neuron depth - defines the learning capacity of the network\
feature lags\
\
F1 LSTM  = \
\
\
(2) Training Methodology\
Train/test\
cross-validation time series style\
Logistic regression - regularisation , Ridge regression\
LSTM - general theory and why\
	(mention initial play with implementation long training)\
	-\
\
(3) API and docker set-up\
I chose to use flask to host the api. Since I\'92m only performing a 1-step look ahead forecast I\'92m providing no additional arguments, but for a multi-step forecast we could use the GET commands for the hour forecast of interest.\
\
\
(3) Further Work\
- cross validation\
- increased training on GPU or uploading job to a cloud service like GCP.\
- feature selection / correlation\
- the multi-step forecast. \
\
\
    }